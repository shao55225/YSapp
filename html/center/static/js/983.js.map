{"version":3,"file":"static/js/983.js","mappings":"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","sources":["webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/src/model/util.mjs","webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/src/model/node.mjs","webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/src/model/tree-store.mjs","webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/src/tree-node-content.mjs","webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/src/model/useNodeExpandEventBroadcast.mjs","webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/src/model/useDragNode.mjs","webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/src/tree-node.mjs","webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/src/tree.mjs","webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/src/model/useKeydown.mjs","webpack://xxxxx/./node_modules/.pnpm/element-plus@2.3.7_vue@3.3.4/node_modules/element-plus/es/components/tree/index.mjs"],"sourcesContent":["const NODE_KEY = \"$treeNodeId\";\nconst markNodeData = function(node, data) {\n  if (!data || data[NODE_KEY])\n    return;\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n};\nconst getNodeKey = function(key, data) {\n  if (!key)\n    return data[NODE_KEY];\n  return data[key];\n};\nconst handleCurrentChange = (store, emit, setCurrent) => {\n  const preCurrentNode = store.value.currentNode;\n  setCurrent();\n  const currentNode = store.value.currentNode;\n  if (preCurrentNode === currentNode)\n    return;\n  emit(\"current-change\", currentNode ? currentNode.data : null, currentNode);\n};\n\nexport { NODE_KEY, getNodeKey, handleCurrentChange, markNodeData };\n//# sourceMappingURL=util.mjs.map\n","import { reactive } from 'vue';\nimport '../../../../utils/index.mjs';\nimport { markNodeData, NODE_KEY } from './util.mjs';\nimport { hasOwn } from '@vue/shared';\n\nconst getChildState = (node) => {\n  let all = true;\n  let none = true;\n  let allWithoutDisable = true;\n  for (let i = 0, j = node.length; i < j; i++) {\n    const n = node[i];\n    if (n.checked !== true || n.indeterminate) {\n      all = false;\n      if (!n.disabled) {\n        allWithoutDisable = false;\n      }\n    }\n    if (n.checked !== false || n.indeterminate) {\n      none = false;\n    }\n  }\n  return { all, none, allWithoutDisable, half: !all && !none };\n};\nconst reInitChecked = function(node) {\n  if (node.childNodes.length === 0 || node.loading)\n    return;\n  const { all, none, half } = getChildState(node.childNodes);\n  if (all) {\n    node.checked = true;\n    node.indeterminate = false;\n  } else if (half) {\n    node.checked = false;\n    node.indeterminate = true;\n  } else if (none) {\n    node.checked = false;\n    node.indeterminate = false;\n  }\n  const parent = node.parent;\n  if (!parent || parent.level === 0)\n    return;\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent);\n  }\n};\nconst getPropertyFromData = function(node, prop) {\n  const props = node.store.props;\n  const data = node.data || {};\n  const config = props[prop];\n  if (typeof config === \"function\") {\n    return config(data, node);\n  } else if (typeof config === \"string\") {\n    return data[config];\n  } else if (typeof config === \"undefined\") {\n    const dataProp = data[prop];\n    return dataProp === void 0 ? \"\" : dataProp;\n  }\n};\nlet nodeIdSeed = 0;\nclass Node {\n  constructor(options) {\n    this.id = nodeIdSeed++;\n    this.text = null;\n    this.checked = false;\n    this.indeterminate = false;\n    this.data = null;\n    this.expanded = false;\n    this.parent = null;\n    this.visible = true;\n    this.isCurrent = false;\n    this.canFocus = false;\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name];\n      }\n    }\n    this.level = 0;\n    this.loaded = false;\n    this.childNodes = [];\n    this.loading = false;\n    if (this.parent) {\n      this.level = this.parent.level + 1;\n    }\n  }\n  initialize() {\n    const store = this.store;\n    if (!store) {\n      throw new Error(\"[Node]store is required!\");\n    }\n    store.registerNode(this);\n    const props = store.props;\n    if (props && typeof props.isLeaf !== \"undefined\") {\n      const isLeaf = getPropertyFromData(this, \"isLeaf\");\n      if (typeof isLeaf === \"boolean\") {\n        this.isLeafByUser = isLeaf;\n      }\n    }\n    if (store.lazy !== true && this.data) {\n      this.setData(this.data);\n      if (store.defaultExpandAll) {\n        this.expanded = true;\n        this.canFocus = true;\n      }\n    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {\n      this.expand();\n    }\n    if (!Array.isArray(this.data)) {\n      markNodeData(this, this.data);\n    }\n    if (!this.data)\n      return;\n    const defaultExpandedKeys = store.defaultExpandedKeys;\n    const key = store.key;\n    if (key && defaultExpandedKeys && defaultExpandedKeys.includes(this.key)) {\n      this.expand(null, store.autoExpandParent);\n    }\n    if (key && store.currentNodeKey !== void 0 && this.key === store.currentNodeKey) {\n      store.currentNode = this;\n      store.currentNode.isCurrent = true;\n    }\n    if (store.lazy) {\n      store._initDefaultCheckedNode(this);\n    }\n    this.updateLeafState();\n    if (this.parent && (this.level === 1 || this.parent.expanded === true))\n      this.canFocus = true;\n  }\n  setData(data) {\n    if (!Array.isArray(data)) {\n      markNodeData(this, data);\n    }\n    this.data = data;\n    this.childNodes = [];\n    let children;\n    if (this.level === 0 && Array.isArray(this.data)) {\n      children = this.data;\n    } else {\n      children = getPropertyFromData(this, \"children\") || [];\n    }\n    for (let i = 0, j = children.length; i < j; i++) {\n      this.insertChild({ data: children[i] });\n    }\n  }\n  get label() {\n    return getPropertyFromData(this, \"label\");\n  }\n  get key() {\n    const nodeKey = this.store.key;\n    if (this.data)\n      return this.data[nodeKey];\n    return null;\n  }\n  get disabled() {\n    return getPropertyFromData(this, \"disabled\");\n  }\n  get nextSibling() {\n    const parent = this.parent;\n    if (parent) {\n      const index = parent.childNodes.indexOf(this);\n      if (index > -1) {\n        return parent.childNodes[index + 1];\n      }\n    }\n    return null;\n  }\n  get previousSibling() {\n    const parent = this.parent;\n    if (parent) {\n      const index = parent.childNodes.indexOf(this);\n      if (index > -1) {\n        return index > 0 ? parent.childNodes[index - 1] : null;\n      }\n    }\n    return null;\n  }\n  contains(target, deep = true) {\n    return (this.childNodes || []).some((child) => child === target || deep && child.contains(target));\n  }\n  remove() {\n    const parent = this.parent;\n    if (parent) {\n      parent.removeChild(this);\n    }\n  }\n  insertChild(child, index, batch) {\n    if (!child)\n      throw new Error(\"InsertChild error: child is required.\");\n    if (!(child instanceof Node)) {\n      if (!batch) {\n        const children = this.getChildren(true);\n        if (!children.includes(child.data)) {\n          if (typeof index === \"undefined\" || index < 0) {\n            children.push(child.data);\n          } else {\n            children.splice(index, 0, child.data);\n          }\n        }\n      }\n      Object.assign(child, {\n        parent: this,\n        store: this.store\n      });\n      child = reactive(new Node(child));\n      if (child instanceof Node) {\n        child.initialize();\n      }\n    }\n    ;\n    child.level = this.level + 1;\n    if (typeof index === \"undefined\" || index < 0) {\n      this.childNodes.push(child);\n    } else {\n      this.childNodes.splice(index, 0, child);\n    }\n    this.updateLeafState();\n  }\n  insertBefore(child, ref) {\n    let index;\n    if (ref) {\n      index = this.childNodes.indexOf(ref);\n    }\n    this.insertChild(child, index);\n  }\n  insertAfter(child, ref) {\n    let index;\n    if (ref) {\n      index = this.childNodes.indexOf(ref);\n      if (index !== -1)\n        index += 1;\n    }\n    this.insertChild(child, index);\n  }\n  removeChild(child) {\n    const children = this.getChildren() || [];\n    const dataIndex = children.indexOf(child.data);\n    if (dataIndex > -1) {\n      children.splice(dataIndex, 1);\n    }\n    const index = this.childNodes.indexOf(child);\n    if (index > -1) {\n      this.store && this.store.deregisterNode(child);\n      child.parent = null;\n      this.childNodes.splice(index, 1);\n    }\n    this.updateLeafState();\n  }\n  removeChildByData(data) {\n    let targetNode = null;\n    for (let i = 0; i < this.childNodes.length; i++) {\n      if (this.childNodes[i].data === data) {\n        targetNode = this.childNodes[i];\n        break;\n      }\n    }\n    if (targetNode) {\n      this.removeChild(targetNode);\n    }\n  }\n  expand(callback, expandParent) {\n    const done = () => {\n      if (expandParent) {\n        let parent = this.parent;\n        while (parent.level > 0) {\n          parent.expanded = true;\n          parent = parent.parent;\n        }\n      }\n      this.expanded = true;\n      if (callback)\n        callback();\n      this.childNodes.forEach((item) => {\n        item.canFocus = true;\n      });\n    };\n    if (this.shouldLoadData()) {\n      this.loadData((data) => {\n        if (Array.isArray(data)) {\n          if (this.checked) {\n            this.setChecked(true, true);\n          } else if (!this.store.checkStrictly) {\n            reInitChecked(this);\n          }\n          done();\n        }\n      });\n    } else {\n      done();\n    }\n  }\n  doCreateChildren(array, defaultProps = {}) {\n    array.forEach((item) => {\n      this.insertChild(Object.assign({ data: item }, defaultProps), void 0, true);\n    });\n  }\n  collapse() {\n    this.expanded = false;\n    this.childNodes.forEach((item) => {\n      item.canFocus = false;\n    });\n  }\n  shouldLoadData() {\n    return this.store.lazy === true && this.store.load && !this.loaded;\n  }\n  updateLeafState() {\n    if (this.store.lazy === true && this.loaded !== true && typeof this.isLeafByUser !== \"undefined\") {\n      this.isLeaf = this.isLeafByUser;\n      return;\n    }\n    const childNodes = this.childNodes;\n    if (!this.store.lazy || this.store.lazy === true && this.loaded === true) {\n      this.isLeaf = !childNodes || childNodes.length === 0;\n      return;\n    }\n    this.isLeaf = false;\n  }\n  setChecked(value, deep, recursion, passValue) {\n    this.indeterminate = value === \"half\";\n    this.checked = value === true;\n    if (this.store.checkStrictly)\n      return;\n    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n      const { all, allWithoutDisable } = getChildState(this.childNodes);\n      if (!this.isLeaf && !all && allWithoutDisable) {\n        this.checked = false;\n        value = false;\n      }\n      const handleDescendants = () => {\n        if (deep) {\n          const childNodes = this.childNodes;\n          for (let i = 0, j = childNodes.length; i < j; i++) {\n            const child = childNodes[i];\n            passValue = passValue || value !== false;\n            const isCheck = child.disabled ? child.checked : passValue;\n            child.setChecked(isCheck, deep, true, passValue);\n          }\n          const { half, all: all2 } = getChildState(childNodes);\n          if (!all2) {\n            this.checked = all2;\n            this.indeterminate = half;\n          }\n        }\n      };\n      if (this.shouldLoadData()) {\n        this.loadData(() => {\n          handleDescendants();\n          reInitChecked(this);\n        }, {\n          checked: value !== false\n        });\n        return;\n      } else {\n        handleDescendants();\n      }\n    }\n    const parent = this.parent;\n    if (!parent || parent.level === 0)\n      return;\n    if (!recursion) {\n      reInitChecked(parent);\n    }\n  }\n  getChildren(forceInit = false) {\n    if (this.level === 0)\n      return this.data;\n    const data = this.data;\n    if (!data)\n      return null;\n    const props = this.store.props;\n    let children = \"children\";\n    if (props) {\n      children = props.children || \"children\";\n    }\n    if (data[children] === void 0) {\n      data[children] = null;\n    }\n    if (forceInit && !data[children]) {\n      data[children] = [];\n    }\n    return data[children];\n  }\n  updateChildren() {\n    const newData = this.getChildren() || [];\n    const oldData = this.childNodes.map((node) => node.data);\n    const newDataMap = {};\n    const newNodes = [];\n    newData.forEach((item, index) => {\n      const key = item[NODE_KEY];\n      const isNodeExists = !!key && oldData.findIndex((data) => data[NODE_KEY] === key) >= 0;\n      if (isNodeExists) {\n        newDataMap[key] = { index, data: item };\n      } else {\n        newNodes.push({ index, data: item });\n      }\n    });\n    if (!this.store.lazy) {\n      oldData.forEach((item) => {\n        if (!newDataMap[item[NODE_KEY]])\n          this.removeChildByData(item);\n      });\n    }\n    newNodes.forEach(({ index, data }) => {\n      this.insertChild({ data }, index);\n    });\n    this.updateLeafState();\n  }\n  loadData(callback, defaultProps = {}) {\n    if (this.store.lazy === true && this.store.load && !this.loaded && (!this.loading || Object.keys(defaultProps).length)) {\n      this.loading = true;\n      const resolve = (children) => {\n        this.childNodes = [];\n        this.doCreateChildren(children, defaultProps);\n        this.loaded = true;\n        this.loading = false;\n        this.updateLeafState();\n        if (callback) {\n          callback.call(this, children);\n        }\n      };\n      this.store.load(this, resolve);\n    } else {\n      if (callback) {\n        callback.call(this);\n      }\n    }\n  }\n}\n\nexport { Node as default, getChildState };\n//# sourceMappingURL=node.mjs.map\n","import '../../../../utils/index.mjs';\nimport Node from './node.mjs';\nimport { getNodeKey } from './util.mjs';\nimport { hasOwn, isObject } from '@vue/shared';\n\nclass TreeStore {\n  constructor(options) {\n    this.currentNode = null;\n    this.currentNodeKey = null;\n    for (const option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option];\n      }\n    }\n    this.nodesMap = {};\n  }\n  initialize() {\n    this.root = new Node({\n      data: this.data,\n      store: this\n    });\n    this.root.initialize();\n    if (this.lazy && this.load) {\n      const loadFn = this.load;\n      loadFn(this.root, (data) => {\n        this.root.doCreateChildren(data);\n        this._initDefaultCheckedNodes();\n      });\n    } else {\n      this._initDefaultCheckedNodes();\n    }\n  }\n  filter(value) {\n    const filterNodeMethod = this.filterNodeMethod;\n    const lazy = this.lazy;\n    const traverse = function(node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach((child) => {\n        child.visible = filterNodeMethod.call(child, value, child.data, child);\n        traverse(child);\n      });\n      if (!node.visible && childNodes.length) {\n        let allHidden = true;\n        allHidden = !childNodes.some((child) => child.visible);\n        if (node.root) {\n          ;\n          node.root.visible = allHidden === false;\n        } else {\n          ;\n          node.visible = allHidden === false;\n        }\n      }\n      if (!value)\n        return;\n      if (node.visible && !node.isLeaf && !lazy)\n        node.expand();\n    };\n    traverse(this);\n  }\n  setData(newVal) {\n    const instanceChanged = newVal !== this.root.data;\n    if (instanceChanged) {\n      this.root.setData(newVal);\n      this._initDefaultCheckedNodes();\n    } else {\n      this.root.updateChildren();\n    }\n  }\n  getNode(data) {\n    if (data instanceof Node)\n      return data;\n    const key = isObject(data) ? getNodeKey(this.key, data) : data;\n    return this.nodesMap[key] || null;\n  }\n  insertBefore(data, refData) {\n    const refNode = this.getNode(refData);\n    refNode.parent.insertBefore({ data }, refNode);\n  }\n  insertAfter(data, refData) {\n    const refNode = this.getNode(refData);\n    refNode.parent.insertAfter({ data }, refNode);\n  }\n  remove(data) {\n    const node = this.getNode(data);\n    if (node && node.parent) {\n      if (node === this.currentNode) {\n        this.currentNode = null;\n      }\n      node.parent.removeChild(node);\n    }\n  }\n  append(data, parentData) {\n    const parentNode = parentData ? this.getNode(parentData) : this.root;\n    if (parentNode) {\n      parentNode.insertChild({ data });\n    }\n  }\n  _initDefaultCheckedNodes() {\n    const defaultCheckedKeys = this.defaultCheckedKeys || [];\n    const nodesMap = this.nodesMap;\n    defaultCheckedKeys.forEach((checkedKey) => {\n      const node = nodesMap[checkedKey];\n      if (node) {\n        node.setChecked(true, !this.checkStrictly);\n      }\n    });\n  }\n  _initDefaultCheckedNode(node) {\n    const defaultCheckedKeys = this.defaultCheckedKeys || [];\n    if (defaultCheckedKeys.includes(node.key)) {\n      node.setChecked(true, !this.checkStrictly);\n    }\n  }\n  setDefaultCheckedKey(newVal) {\n    if (newVal !== this.defaultCheckedKeys) {\n      this.defaultCheckedKeys = newVal;\n      this._initDefaultCheckedNodes();\n    }\n  }\n  registerNode(node) {\n    const key = this.key;\n    if (!node || !node.data)\n      return;\n    if (!key) {\n      this.nodesMap[node.id] = node;\n    } else {\n      const nodeKey = node.key;\n      if (nodeKey !== void 0)\n        this.nodesMap[node.key] = node;\n    }\n  }\n  deregisterNode(node) {\n    const key = this.key;\n    if (!key || !node || !node.data)\n      return;\n    node.childNodes.forEach((child) => {\n      this.deregisterNode(child);\n    });\n    delete this.nodesMap[node.key];\n  }\n  getCheckedNodes(leafOnly = false, includeHalfChecked = false) {\n    const checkedNodes = [];\n    const traverse = function(node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach((child) => {\n        if ((child.checked || includeHalfChecked && child.indeterminate) && (!leafOnly || leafOnly && child.isLeaf)) {\n          checkedNodes.push(child.data);\n        }\n        traverse(child);\n      });\n    };\n    traverse(this);\n    return checkedNodes;\n  }\n  getCheckedKeys(leafOnly = false) {\n    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key]);\n  }\n  getHalfCheckedNodes() {\n    const nodes = [];\n    const traverse = function(node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach((child) => {\n        if (child.indeterminate) {\n          nodes.push(child.data);\n        }\n        traverse(child);\n      });\n    };\n    traverse(this);\n    return nodes;\n  }\n  getHalfCheckedKeys() {\n    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key]);\n  }\n  _getAllNodes() {\n    const allNodes = [];\n    const nodesMap = this.nodesMap;\n    for (const nodeKey in nodesMap) {\n      if (hasOwn(nodesMap, nodeKey)) {\n        allNodes.push(nodesMap[nodeKey]);\n      }\n    }\n    return allNodes;\n  }\n  updateChildren(key, data) {\n    const node = this.nodesMap[key];\n    if (!node)\n      return;\n    const childNodes = node.childNodes;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const child = childNodes[i];\n      this.remove(child.data);\n    }\n    for (let i = 0, j = data.length; i < j; i++) {\n      const child = data[i];\n      this.append(child, node.data);\n    }\n  }\n  _setCheckedKeys(key, leafOnly = false, checkedKeys) {\n    const allNodes = this._getAllNodes().sort((a, b) => b.level - a.level);\n    const cache = /* @__PURE__ */ Object.create(null);\n    const keys = Object.keys(checkedKeys);\n    allNodes.forEach((node) => node.setChecked(false, false));\n    for (let i = 0, j = allNodes.length; i < j; i++) {\n      const node = allNodes[i];\n      const nodeKey = node.data[key].toString();\n      const checked = keys.includes(nodeKey);\n      if (!checked) {\n        if (node.checked && !cache[nodeKey]) {\n          node.setChecked(false, false);\n        }\n        continue;\n      }\n      let parent = node.parent;\n      while (parent && parent.level > 0) {\n        cache[parent.data[key]] = true;\n        parent = parent.parent;\n      }\n      if (node.isLeaf || this.checkStrictly) {\n        node.setChecked(true, false);\n        continue;\n      }\n      node.setChecked(true, true);\n      if (leafOnly) {\n        node.setChecked(false, false);\n        const traverse = function(node2) {\n          const childNodes = node2.childNodes;\n          childNodes.forEach((child) => {\n            if (!child.isLeaf) {\n              child.setChecked(false, false);\n            }\n            traverse(child);\n          });\n        };\n        traverse(node);\n      }\n    }\n  }\n  setCheckedNodes(array, leafOnly = false) {\n    const key = this.key;\n    const checkedKeys = {};\n    array.forEach((item) => {\n      checkedKeys[(item || {})[key]] = true;\n    });\n    this._setCheckedKeys(key, leafOnly, checkedKeys);\n  }\n  setCheckedKeys(keys, leafOnly = false) {\n    this.defaultCheckedKeys = keys;\n    const key = this.key;\n    const checkedKeys = {};\n    keys.forEach((key2) => {\n      checkedKeys[key2] = true;\n    });\n    this._setCheckedKeys(key, leafOnly, checkedKeys);\n  }\n  setDefaultExpandedKeys(keys) {\n    keys = keys || [];\n    this.defaultExpandedKeys = keys;\n    keys.forEach((key) => {\n      const node = this.getNode(key);\n      if (node)\n        node.expand(null, this.autoExpandParent);\n    });\n  }\n  setChecked(data, checked, deep) {\n    const node = this.getNode(data);\n    if (node) {\n      node.setChecked(!!checked, deep);\n    }\n  }\n  getCurrentNode() {\n    return this.currentNode;\n  }\n  setCurrentNode(currentNode) {\n    const prevCurrentNode = this.currentNode;\n    if (prevCurrentNode) {\n      prevCurrentNode.isCurrent = false;\n    }\n    this.currentNode = currentNode;\n    this.currentNode.isCurrent = true;\n  }\n  setUserCurrentNode(node, shouldAutoExpandParent = true) {\n    const key = node[this.key];\n    const currNode = this.nodesMap[key];\n    this.setCurrentNode(currNode);\n    if (shouldAutoExpandParent && this.currentNode.level > 1) {\n      this.currentNode.parent.expand(null, true);\n    }\n  }\n  setCurrentNodeKey(key, shouldAutoExpandParent = true) {\n    if (key === null || key === void 0) {\n      this.currentNode && (this.currentNode.isCurrent = false);\n      this.currentNode = null;\n      return;\n    }\n    const node = this.getNode(key);\n    if (node) {\n      this.setCurrentNode(node);\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true);\n      }\n    }\n  }\n}\n\nexport { TreeStore as default };\n//# sourceMappingURL=tree-store.mjs.map\n","import { defineComponent, inject, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup(props) {\n    const ns = useNamespace(\"tree\");\n    const nodeInstance = inject(\"NodeInstance\");\n    const tree = inject(\"RootTree\");\n    return () => {\n      const node = props.node;\n      const { data, store } = node;\n      return props.renderContent ? props.renderContent(h, { _self: nodeInstance, node, data, store }) : tree.ctx.slots.default ? tree.ctx.slots.default({ node, data }) : h(\"span\", { class: ns.be(\"node\", \"label\") }, [node.label]);\n    };\n  }\n});\nvar NodeContent = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node-content.vue\"]]);\n\nexport { NodeContent as default };\n//# sourceMappingURL=tree-node-content.mjs.map\n","import { inject, provide } from 'vue';\n\nfunction useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject(\"TreeNodeMap\", null);\n  const currentNodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse();\n      }\n    },\n    children: []\n  };\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap);\n  }\n  provide(\"TreeNodeMap\", currentNodeMap);\n  return {\n    broadcastExpanded: (node) => {\n      if (!props.accordion)\n        return;\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node);\n      }\n    }\n  };\n}\n\nexport { useNodeExpandEventBroadcast };\n//# sourceMappingURL=useNodeExpandEventBroadcast.mjs.map\n","import { ref, provide } from 'vue';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { removeClass, addClass } from '../../../../utils/dom/style.mjs';\n\nconst dragEventsKey = Symbol(\"dragEvents\");\nfunction useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {\n  const ns = useNamespace(\"tree\");\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null\n  });\n  const treeNodeDragStart = ({ event, treeNode }) => {\n    if (typeof props.allowDrag === \"function\" && !props.allowDrag(treeNode.node)) {\n      event.preventDefault();\n      return false;\n    }\n    event.dataTransfer.effectAllowed = \"move\";\n    try {\n      event.dataTransfer.setData(\"text/plain\", \"\");\n    } catch (e) {\n    }\n    dragState.value.draggingNode = treeNode;\n    ctx.emit(\"node-drag-start\", treeNode.node, event);\n  };\n  const treeNodeDragOver = ({ event, treeNode }) => {\n    const dropNode = treeNode;\n    const oldDropNode = dragState.value.dropNode;\n    if (oldDropNode && oldDropNode.node.id !== dropNode.node.id) {\n      removeClass(oldDropNode.$el, ns.is(\"drop-inner\"));\n    }\n    const draggingNode = dragState.value.draggingNode;\n    if (!draggingNode || !dropNode)\n      return;\n    let dropPrev = true;\n    let dropInner = true;\n    let dropNext = true;\n    let userAllowDropInner = true;\n    if (typeof props.allowDrop === \"function\") {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, \"prev\");\n      userAllowDropInner = dropInner = props.allowDrop(draggingNode.node, dropNode.node, \"inner\");\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, \"next\");\n    }\n    event.dataTransfer.dropEffect = dropInner || dropPrev || dropNext ? \"move\" : \"none\";\n    if ((dropPrev || dropInner || dropNext) && (oldDropNode == null ? void 0 : oldDropNode.node.id) !== dropNode.node.id) {\n      if (oldDropNode) {\n        ctx.emit(\"node-drag-leave\", draggingNode.node, oldDropNode.node, event);\n      }\n      ctx.emit(\"node-drag-enter\", draggingNode.node, dropNode.node, event);\n    }\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode;\n    }\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false;\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false;\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false;\n    }\n    if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {\n      dropPrev = false;\n      dropInner = false;\n      dropNext = false;\n    }\n    const targetPosition = dropNode.$el.getBoundingClientRect();\n    const treePosition = el$.value.getBoundingClientRect();\n    let dropType;\n    const prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;\n    const nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;\n    let indicatorTop = -9999;\n    const distance = event.clientY - targetPosition.top;\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = \"before\";\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = \"after\";\n    } else if (dropInner) {\n      dropType = \"inner\";\n    } else {\n      dropType = \"none\";\n    }\n    const iconPosition = dropNode.$el.querySelector(`.${ns.be(\"node\", \"expand-icon\")}`).getBoundingClientRect();\n    const dropIndicator = dropIndicator$.value;\n    if (dropType === \"before\") {\n      indicatorTop = iconPosition.top - treePosition.top;\n    } else if (dropType === \"after\") {\n      indicatorTop = iconPosition.bottom - treePosition.top;\n    }\n    dropIndicator.style.top = `${indicatorTop}px`;\n    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`;\n    if (dropType === \"inner\") {\n      addClass(dropNode.$el, ns.is(\"drop-inner\"));\n    } else {\n      removeClass(dropNode.$el, ns.is(\"drop-inner\"));\n    }\n    dragState.value.showDropIndicator = dropType === \"before\" || dropType === \"after\";\n    dragState.value.allowDrop = dragState.value.showDropIndicator || userAllowDropInner;\n    dragState.value.dropType = dropType;\n    ctx.emit(\"node-drag-over\", draggingNode.node, dropNode.node, event);\n  };\n  const treeNodeDragEnd = (event) => {\n    const { draggingNode, dropType, dropNode } = dragState.value;\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = { data: draggingNode.node.data };\n      if (dropType !== \"none\") {\n        draggingNode.node.remove();\n      }\n      if (dropType === \"before\") {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"after\") {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"inner\") {\n        dropNode.node.insertChild(draggingNodeCopy);\n      }\n      if (dropType !== \"none\") {\n        store.value.registerNode(draggingNodeCopy);\n      }\n      removeClass(dropNode.$el, ns.is(\"drop-inner\"));\n      ctx.emit(\"node-drag-end\", draggingNode.node, dropNode.node, dropType, event);\n      if (dropType !== \"none\") {\n        ctx.emit(\"node-drop\", draggingNode.node, dropNode.node, dropType, event);\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit(\"node-drag-end\", draggingNode.node, null, dropType, event);\n    }\n    dragState.value.showDropIndicator = false;\n    dragState.value.draggingNode = null;\n    dragState.value.dropNode = null;\n    dragState.value.allowDrop = true;\n  };\n  provide(dragEventsKey, {\n    treeNodeDragStart,\n    treeNodeDragOver,\n    treeNodeDragEnd\n  });\n  return {\n    dragState\n  };\n}\n\nexport { dragEventsKey, useDragNodeHandler };\n//# sourceMappingURL=useDragNode.mjs.map\n","import { defineComponent, inject, ref, getCurrentInstance, provide, watch, nextTick, resolveComponent, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, createVNode, Fragment, renderList, vShow } from 'vue';\nimport { isFunction, isString } from '@vue/shared';\nimport _CollapseTransition from '../../collapse-transition/index.mjs';\nimport { ElCheckbox } from '../../checkbox/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading, CaretRight } from '@element-plus/icons-vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport NodeContent from './tree-node-content.mjs';\nimport { getNodeKey, handleCurrentChange } from './model/util.mjs';\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast.mjs';\nimport { dragEventsKey } from './model/useDragNode.mjs';\nimport Node from './model/node.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition: _CollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({})\n    },\n    props: {\n      type: Object,\n      default: () => ({})\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"node-expand\"],\n  setup(props, ctx) {\n    const ns = useNamespace(\"tree\");\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props);\n    const tree = inject(\"RootTree\");\n    const expanded = ref(false);\n    const childNodeRendered = ref(false);\n    const oldChecked = ref(null);\n    const oldIndeterminate = ref(null);\n    const node$ = ref(null);\n    const dragEvents = inject(dragEventsKey);\n    const instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n    if (!tree) {\n      debugWarn(\"Tree\", \"Can not find node's tree.\");\n    }\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n    const childrenKey = tree.props[\"children\"] || \"children\";\n    watch(() => {\n      const children = props.node.data[childrenKey];\n      return children && [...children];\n    }, () => {\n      props.node.updateChildren();\n    });\n    watch(() => props.node.indeterminate, (val) => {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(() => props.node.checked, (val) => {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(() => props.node.expanded, (val) => {\n      nextTick(() => expanded.value = val);\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n    const getNodeKey$1 = (node) => {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n    const getNodeClass = (node) => {\n      const nodeClassFunc = props.props.class;\n      if (!nodeClassFunc) {\n        return {};\n      }\n      let className;\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node;\n        className = nodeClassFunc(data, node);\n      } else {\n        className = nodeClassFunc;\n      }\n      if (isString(className)) {\n        return { [className]: true };\n      } else {\n        return className;\n      }\n    };\n    const handleSelectChange = (checked, indeterminate) => {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n    const handleClick = (e) => {\n      handleCurrentChange(tree.store, tree.ctx.emit, () => tree.store.value.setCurrentNode(props.node));\n      tree.currentNode.value = props.node;\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked }\n        });\n      }\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance, e);\n    };\n    const handleContextMenu = (event) => {\n      if (tree.instance.vnode.props[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf)\n        return;\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand();\n        ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n      }\n    };\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);\n      nextTick(() => {\n        const store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n    const handleChildNodeExpand = (nodeData, node, instance2) => {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n    const handleDragStart = (event) => {\n      if (!tree.props.draggable)\n        return;\n      dragEvents.treeNodeDragStart({ event, treeNode: props });\n    };\n    const handleDragOver = (event) => {\n      event.preventDefault();\n      if (!tree.props.draggable)\n        return;\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node }\n      });\n    };\n    const handleDrop = (event) => {\n      event.preventDefault();\n    };\n    const handleDragEnd = (event) => {\n      if (!tree.props.draggable)\n        return;\n      dragEvents.treeNodeDragEnd(event);\n    };\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey: getNodeKey$1,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\"];\nconst _hoisted_2 = [\"aria-expanded\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  const _component_loading = resolveComponent(\"loading\");\n  const _component_node_content = resolveComponent(\"node-content\");\n  const _component_el_tree_node = resolveComponent(\"el-tree-node\");\n  const _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"node$\",\n    class: normalizeClass([\n      _ctx.ns.b(\"node\"),\n      _ctx.ns.is(\"expanded\", _ctx.expanded),\n      _ctx.ns.is(\"current\", _ctx.node.isCurrent),\n      _ctx.ns.is(\"hidden\", !_ctx.node.visible),\n      _ctx.ns.is(\"focusable\", !_ctx.node.disabled),\n      _ctx.ns.is(\"checked\", !_ctx.node.disabled && _ctx.node.checked),\n      _ctx.getNodeClass(_ctx.node)\n    ]),\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: _cache[1] || (_cache[1] = withModifiers((...args) => _ctx.handleClick && _ctx.handleClick(...args), [\"stop\"])),\n    onContextmenu: _cache[2] || (_cache[2] = (...args) => _ctx.handleContextMenu && _ctx.handleContextMenu(...args)),\n    onDragstart: _cache[3] || (_cache[3] = withModifiers((...args) => _ctx.handleDragStart && _ctx.handleDragStart(...args), [\"stop\"])),\n    onDragover: _cache[4] || (_cache[4] = withModifiers((...args) => _ctx.handleDragOver && _ctx.handleDragOver(...args), [\"stop\"])),\n    onDragend: _cache[5] || (_cache[5] = withModifiers((...args) => _ctx.handleDragEnd && _ctx.handleDragEnd(...args), [\"stop\"])),\n    onDrop: _cache[6] || (_cache[6] = withModifiers((...args) => _ctx.handleDrop && _ctx.handleDrop(...args), [\"stop\"]))\n  }, [\n    createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.be(\"node\", \"content\")),\n      style: normalizeStyle({ paddingLeft: (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\" })\n    }, [\n      _ctx.tree.props.icon || _ctx.CaretRight ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([\n          _ctx.ns.be(\"node\", \"expand-icon\"),\n          _ctx.ns.is(\"leaf\", _ctx.node.isLeaf),\n          {\n            expanded: !_ctx.node.isLeaf && _ctx.expanded\n          }\n        ]),\n        onClick: withModifiers(_ctx.handleExpandIconClick, [\"stop\"])\n      }, {\n        default: withCtx(() => [\n          (openBlock(), createBlock(resolveDynamicComponent(_ctx.tree.props.icon || _ctx.CaretRight)))\n        ]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true),\n      _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n        key: 1,\n        \"model-value\": _ctx.node.checked,\n        indeterminate: _ctx.node.indeterminate,\n        disabled: !!_ctx.node.disabled,\n        onClick: _cache[0] || (_cache[0] = withModifiers(() => {\n        }, [\"stop\"])),\n        onChange: _ctx.handleCheckChange\n      }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onChange\"])) : createCommentVNode(\"v-if\", true),\n      _ctx.node.loading ? (openBlock(), createBlock(_component_el_icon, {\n        key: 2,\n        class: normalizeClass([_ctx.ns.be(\"node\", \"loading-icon\"), _ctx.ns.is(\"loading\")])\n      }, {\n        default: withCtx(() => [\n          createVNode(_component_loading)\n        ]),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true),\n      createVNode(_component_node_content, {\n        node: _ctx.node,\n        \"render-content\": _ctx.renderContent\n      }, null, 8, [\"node\", \"render-content\"])\n    ], 6),\n    createVNode(_component_el_collapse_transition, null, {\n      default: withCtx(() => [\n        !_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createElementBlock(\"div\", {\n          key: 0,\n          class: normalizeClass(_ctx.ns.be(\"node\", \"children\")),\n          role: \"group\",\n          \"aria-expanded\": _ctx.expanded\n        }, [\n          (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.node.childNodes, (child) => {\n            return openBlock(), createBlock(_component_el_tree_node, {\n              key: _ctx.getNodeKey(child),\n              \"render-content\": _ctx.renderContent,\n              \"render-after-expand\": _ctx.renderAfterExpand,\n              \"show-checkbox\": _ctx.showCheckbox,\n              node: child,\n              accordion: _ctx.accordion,\n              props: _ctx.props,\n              onNodeExpand: _ctx.handleChildNodeExpand\n            }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"accordion\", \"props\", \"onNodeExpand\"]);\n          }), 128))\n        ], 10, _hoisted_2)), [\n          [vShow, _ctx.expanded]\n        ]) : createCommentVNode(\"v-if\", true)\n      ]),\n      _: 1\n    })\n  ], 42, _hoisted_1)), [\n    [vShow, _ctx.node.visible]\n  ]);\n}\nvar ElTreeNode = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node.vue\"]]);\n\nexport { ElTreeNode as default };\n//# sourceMappingURL=tree-node.mjs.map\n","import { defineComponent, ref, computed, watch, provide, getCurrentInstance, resolveComponent, openBlock, createElementBlock, normalizeClass, Fragment, renderList, createBlock, renderSlot, createElementVNode, toDisplayString, createCommentVNode, withDirectives, vShow } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../form/index.mjs';\nimport TreeStore from './model/tree-store.mjs';\nimport { getNodeKey, handleCurrentChange } from './model/util.mjs';\nimport ElTreeNode from './tree-node.mjs';\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast.mjs';\nimport { useDragNodeHandler } from './model/useDragNode.mjs';\nimport { useKeydown } from './model/useKeydown.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { formItemContextKey } from '../../form/src/constants.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElTree\",\n  components: { ElTreeNode },\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    emptyText: {\n      type: String\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true\n    },\n    checkOnClickNode: Boolean,\n    checkDescendants: {\n      type: Boolean,\n      default: false\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true\n    },\n    defaultCheckedKeys: Array,\n    defaultExpandedKeys: Array,\n    currentNodeKey: [String, Number],\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    },\n    draggable: {\n      type: Boolean,\n      default: false\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object,\n      default: () => ({\n        children: \"children\",\n        label: \"label\",\n        disabled: \"disabled\"\n      })\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    highlightCurrent: Boolean,\n    load: Function,\n    filterNodeMethod: Function,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18\n    },\n    icon: {\n      type: iconPropType\n    }\n  },\n  emits: [\n    \"check-change\",\n    \"current-change\",\n    \"node-click\",\n    \"node-contextmenu\",\n    \"node-collapse\",\n    \"node-expand\",\n    \"check\",\n    \"node-drag-start\",\n    \"node-drag-end\",\n    \"node-drop\",\n    \"node-drag-leave\",\n    \"node-drag-enter\",\n    \"node-drag-over\"\n  ],\n  setup(props, ctx) {\n    const { t } = useLocale();\n    const ns = useNamespace(\"tree\");\n    const store = ref(new TreeStore({\n      key: props.nodeKey,\n      data: props.data,\n      lazy: props.lazy,\n      props: props.props,\n      load: props.load,\n      currentNodeKey: props.currentNodeKey,\n      checkStrictly: props.checkStrictly,\n      checkDescendants: props.checkDescendants,\n      defaultCheckedKeys: props.defaultCheckedKeys,\n      defaultExpandedKeys: props.defaultExpandedKeys,\n      autoExpandParent: props.autoExpandParent,\n      defaultExpandAll: props.defaultExpandAll,\n      filterNodeMethod: props.filterNodeMethod\n    }));\n    store.value.initialize();\n    const root = ref(store.value.root);\n    const currentNode = ref(null);\n    const el$ = ref(null);\n    const dropIndicator$ = ref(null);\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props);\n    const { dragState } = useDragNodeHandler({\n      props,\n      ctx,\n      el$,\n      dropIndicator$,\n      store\n    });\n    useKeydown({ el$ }, store);\n    const isEmpty = computed(() => {\n      const { childNodes } = root.value;\n      return !childNodes || childNodes.length === 0 || childNodes.every(({ visible }) => !visible);\n    });\n    watch(() => props.currentNodeKey, (newVal) => {\n      store.value.setCurrentNodeKey(newVal);\n    });\n    watch(() => props.defaultCheckedKeys, (newVal) => {\n      store.value.setDefaultCheckedKey(newVal);\n    });\n    watch(() => props.defaultExpandedKeys, (newVal) => {\n      store.value.setDefaultExpandedKeys(newVal);\n    });\n    watch(() => props.data, (newVal) => {\n      store.value.setData(newVal);\n    }, { deep: true });\n    watch(() => props.checkStrictly, (newVal) => {\n      store.value.checkStrictly = newVal;\n    });\n    const filter = (value) => {\n      if (!props.filterNodeMethod)\n        throw new Error(\"[Tree] filterNodeMethod is required when filter\");\n      store.value.filter(value);\n    };\n    const getNodeKey$1 = (node) => {\n      return getNodeKey(props.nodeKey, node.data);\n    };\n    const getNodePath = (data) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in getNodePath\");\n      const node = store.value.getNode(data);\n      if (!node)\n        return [];\n      const path = [node.data];\n      let parent = node.parent;\n      while (parent && parent !== root.value) {\n        path.push(parent.data);\n        parent = parent.parent;\n      }\n      return path.reverse();\n    };\n    const getCheckedNodes = (leafOnly, includeHalfChecked) => {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked);\n    };\n    const getCheckedKeys = (leafOnly) => {\n      return store.value.getCheckedKeys(leafOnly);\n    };\n    const getCurrentNode = () => {\n      const currentNode2 = store.value.getCurrentNode();\n      return currentNode2 ? currentNode2.data : null;\n    };\n    const getCurrentKey = () => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in getCurrentKey\");\n      const currentNode2 = getCurrentNode();\n      return currentNode2 ? currentNode2[props.nodeKey] : null;\n    };\n    const setCheckedNodes = (nodes, leafOnly) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCheckedNodes\");\n      store.value.setCheckedNodes(nodes, leafOnly);\n    };\n    const setCheckedKeys = (keys, leafOnly) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCheckedKeys\");\n      store.value.setCheckedKeys(keys, leafOnly);\n    };\n    const setChecked = (data, checked, deep) => {\n      store.value.setChecked(data, checked, deep);\n    };\n    const getHalfCheckedNodes = () => {\n      return store.value.getHalfCheckedNodes();\n    };\n    const getHalfCheckedKeys = () => {\n      return store.value.getHalfCheckedKeys();\n    };\n    const setCurrentNode = (node, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCurrentNode\");\n      handleCurrentChange(store, ctx.emit, () => store.value.setUserCurrentNode(node, shouldAutoExpandParent));\n    };\n    const setCurrentKey = (key, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCurrentKey\");\n      handleCurrentChange(store, ctx.emit, () => store.value.setCurrentNodeKey(key, shouldAutoExpandParent));\n    };\n    const getNode = (data) => {\n      return store.value.getNode(data);\n    };\n    const remove = (data) => {\n      store.value.remove(data);\n    };\n    const append = (data, parentNode) => {\n      store.value.append(data, parentNode);\n    };\n    const insertBefore = (data, refNode) => {\n      store.value.insertBefore(data, refNode);\n    };\n    const insertAfter = (data, refNode) => {\n      store.value.insertAfter(data, refNode);\n    };\n    const handleNodeExpand = (nodeData, node, instance) => {\n      broadcastExpanded(node);\n      ctx.emit(\"node-expand\", nodeData, node, instance);\n    };\n    const updateKeyChildren = (key, data) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in updateKeyChild\");\n      store.value.updateChildren(key, data);\n    };\n    provide(\"RootTree\", {\n      ctx,\n      props,\n      store,\n      root,\n      currentNode,\n      instance: getCurrentInstance()\n    });\n    provide(formItemContextKey, void 0);\n    return {\n      ns,\n      store,\n      root,\n      currentNode,\n      dragState,\n      el$,\n      dropIndicator$,\n      isEmpty,\n      filter,\n      getNodeKey: getNodeKey$1,\n      getNodePath,\n      getCheckedNodes,\n      getCheckedKeys,\n      getCurrentNode,\n      getCurrentKey,\n      setCheckedNodes,\n      setCheckedKeys,\n      setChecked,\n      getHalfCheckedNodes,\n      getHalfCheckedKeys,\n      setCurrentNode,\n      setCurrentKey,\n      t,\n      getNode,\n      remove,\n      append,\n      insertBefore,\n      insertAfter,\n      handleNodeExpand,\n      updateKeyChildren\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree_node = resolveComponent(\"el-tree-node\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"el$\",\n    class: normalizeClass([\n      _ctx.ns.b(),\n      _ctx.ns.is(\"dragging\", !!_ctx.dragState.draggingNode),\n      _ctx.ns.is(\"drop-not-allow\", !_ctx.dragState.allowDrop),\n      _ctx.ns.is(\"drop-inner\", _ctx.dragState.dropType === \"inner\"),\n      { [_ctx.ns.m(\"highlight-current\")]: _ctx.highlightCurrent }\n    ]),\n    role: \"tree\"\n  }, [\n    (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.root.childNodes, (child) => {\n      return openBlock(), createBlock(_component_el_tree_node, {\n        key: _ctx.getNodeKey(child),\n        node: child,\n        props: _ctx.props,\n        accordion: _ctx.accordion,\n        \"render-after-expand\": _ctx.renderAfterExpand,\n        \"show-checkbox\": _ctx.showCheckbox,\n        \"render-content\": _ctx.renderContent,\n        onNodeExpand: _ctx.handleNodeExpand\n      }, null, 8, [\"node\", \"props\", \"accordion\", \"render-after-expand\", \"show-checkbox\", \"render-content\", \"onNodeExpand\"]);\n    }), 128)),\n    _ctx.isEmpty ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"empty-block\"))\n    }, [\n      renderSlot(_ctx.$slots, \"empty\", {}, () => {\n        var _a;\n        return [\n          createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.ns.e(\"empty-text\"))\n          }, toDisplayString((_a = _ctx.emptyText) != null ? _a : _ctx.t(\"el.tree.emptyText\")), 3)\n        ];\n      })\n    ], 2)) : createCommentVNode(\"v-if\", true),\n    withDirectives(createElementVNode(\"div\", {\n      ref: \"dropIndicator$\",\n      class: normalizeClass(_ctx.ns.e(\"drop-indicator\"))\n    }, null, 2), [\n      [vShow, _ctx.dragState.showDropIndicator]\n    ])\n  ], 2);\n}\nvar Tree = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree.vue\"]]);\n\nexport { Tree as default };\n//# sourceMappingURL=tree.mjs.map\n","import { shallowRef, onMounted, onUpdated, watch } from 'vue';\nimport { useEventListener } from '@vueuse/core';\nimport '../../../../constants/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nfunction useKeydown({ el$ }, store) {\n  const ns = useNamespace(\"tree\");\n  const treeItems = shallowRef([]);\n  const checkboxItems = shallowRef([]);\n  onMounted(() => {\n    initTabIndex();\n  });\n  onUpdated(() => {\n    treeItems.value = Array.from(el$.value.querySelectorAll(\"[role=treeitem]\"));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n  });\n  watch(checkboxItems, (val) => {\n    val.forEach((checkbox) => {\n      checkbox.setAttribute(\"tabindex\", \"-1\");\n    });\n  });\n  const handleKeydown = (ev) => {\n    const currentItem = ev.target;\n    if (!currentItem.className.includes(ns.b(\"node\")))\n      return;\n    const code = ev.code;\n    treeItems.value = Array.from(el$.value.querySelectorAll(`.${ns.is(\"focusable\")}[role=treeitem]`));\n    const currentIndex = treeItems.value.indexOf(currentItem);\n    let nextIndex;\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      ev.preventDefault();\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex !== 0 ? currentIndex - 1 : treeItems.value.length - 1;\n        const startIndex = nextIndex;\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)\n            break;\n          nextIndex--;\n          if (nextIndex === startIndex) {\n            nextIndex = -1;\n            break;\n          }\n          if (nextIndex < 0) {\n            nextIndex = treeItems.value.length - 1;\n          }\n        }\n      } else {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex < treeItems.value.length - 1 ? currentIndex + 1 : 0;\n        const startIndex = nextIndex;\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)\n            break;\n          nextIndex++;\n          if (nextIndex === startIndex) {\n            nextIndex = -1;\n            break;\n          }\n          if (nextIndex >= treeItems.value.length) {\n            nextIndex = 0;\n          }\n        }\n      }\n      nextIndex !== -1 && treeItems.value[nextIndex].focus();\n    }\n    if ([EVENT_CODE.left, EVENT_CODE.right].includes(code)) {\n      ev.preventDefault();\n      currentItem.click();\n    }\n    const hasInput = currentItem.querySelector('[type=\"checkbox\"]');\n    if ([EVENT_CODE.enter, EVENT_CODE.space].includes(code) && hasInput) {\n      ev.preventDefault();\n      hasInput.click();\n    }\n  };\n  useEventListener(el$, \"keydown\", handleKeydown);\n  const initTabIndex = () => {\n    var _a;\n    treeItems.value = Array.from(el$.value.querySelectorAll(`.${ns.is(\"focusable\")}[role=treeitem]`));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n    const checkedItem = el$.value.querySelectorAll(`.${ns.is(\"checked\")}[role=treeitem]`);\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute(\"tabindex\", \"0\");\n      return;\n    }\n    (_a = treeItems.value[0]) == null ? void 0 : _a.setAttribute(\"tabindex\", \"0\");\n  };\n}\n\nexport { useKeydown };\n//# sourceMappingURL=useKeydown.mjs.map\n","import Tree from './src/tree.mjs';\n\nTree.install = (app) => {\n  app.component(Tree.name, Tree);\n};\nconst _Tree = Tree;\nconst ElTree = _Tree;\n\nexport { ElTree, _Tree as default };\n//# sourceMappingURL=index.mjs.map\n"],"names":["NODE_KEY","markNodeData","node","data","Object","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","key","handleCurrentChange","store","emit","setCurrent","preCurrentNode","currentNode","getChildState","all","none","allWithoutDisable","i","j","length","n","checked","indeterminate","disabled","half","reInitChecked","childNodes","loading","parent","level","checkStrictly","getPropertyFromData","prop","props","config","dataProp","nodeIdSeed","Node","constructor","options","this","text","expanded","visible","isCurrent","canFocus","name","loaded","initialize","Error","registerNode","isLeaf","isLeafByUser","lazy","setData","defaultExpandAll","expand","Array","isArray","defaultExpandedKeys","includes","autoExpandParent","currentNodeKey","_initDefaultCheckedNode","updateLeafState","children","insertChild","label","nodeKey","nextSibling","index","indexOf","previousSibling","contains","target","deep","some","child","remove","removeChild","batch","getChildren","push","splice","assign","insertBefore","ref","insertAfter","dataIndex","deregisterNode","removeChildByData","targetNode","callback","expandParent","done","forEach","item","shouldLoadData","loadData","setChecked","doCreateChildren","array","defaultProps","collapse","load","recursion","passValue","checkDescendants","handleDescendants","isCheck","all2","forceInit","updateChildren","newData","oldData","map","newDataMap","newNodes","findIndex","keys","call","resolve","TreeStore","option","nodesMap","root","loadFn","_initDefaultCheckedNodes","filter","filterNodeMethod","traverse","allHidden","newVal","getNode","refData","refNode","append","parentData","parentNode","defaultCheckedKeys","checkedKey","setDefaultCheckedKey","getCheckedNodes","leafOnly","includeHalfChecked","checkedNodes","getCheckedKeys","getHalfCheckedNodes","nodes","getHalfCheckedKeys","_getAllNodes","allNodes","_setCheckedKeys","checkedKeys","sort","a","b","cache","create","toString","node2","setCheckedNodes","setCheckedKeys","key2","setDefaultExpandedKeys","getCurrentNode","setCurrentNode","prevCurrentNode","setUserCurrentNode","shouldAutoExpandParent","currNode","setCurrentNodeKey","_sfc_main","type","required","renderContent","Function","setup","ns","nodeInstance","tree","h","_self","ctx","slots","default","class","be","NodeContent","useNodeExpandEventBroadcast","parentNodeMap","currentNodeMap","treeNodeExpand","broadcastExpanded","accordion","childNode","dragEventsKey","Symbol","components","ElCollapseTransition","ElCheckbox","ElIcon","Loading","Boolean","renderAfterExpand","showCheckbox","emits","childNodeRendered","oldChecked","oldIndeterminate","node$","dragEvents","instance","childrenKey","val","handleSelectChange","handleExpandIconClick","handleCheckChange","ev","halfCheckedNodes","halfCheckedKeys","getNodeClass","nodeClassFunc","className","handleClick","e","expandOnClickNode","checkOnClickNode","handleContextMenu","event","vnode","stopPropagation","preventDefault","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","treeNodeDragStart","treeNode","handleDragOver","treeNodeDragOver","$el","handleDrop","handleDragEnd","treeNodeDragEnd","CaretRight","_hoisted_1","_hoisted_2","ElTreeNode","_ctx","_cache","$props","$setup","$data","$options","_component_el_icon","_component_el_checkbox","_component_loading","_component_node_content","_component_el_tree_node","_component_el_collapse_transition","is","role","tabindex","onClick","args","onContextmenu","onDragstart","onDragover","onDragend","onDrop","style","paddingLeft","indent","icon","_","onChange","onNodeExpand","emptyText","String","Number","allowDrag","allowDrop","highlightCurrent","t","el$","dropIndicator$","dragState","showDropIndicator","draggingNode","dropNode","dropType","dataTransfer","effectAllowed","oldDropNode","dropPrev","dropInner","dropNext","userAllowDropInner","dropEffect","targetPosition","getBoundingClientRect","treePosition","prevPercent","nextPercent","indicatorTop","distance","clientY","top","height","iconPosition","querySelector","dropIndicator","bottom","left","right","draggingNodeCopy","useDragNodeHandler","treeItems","checkboxItems","initTabIndex","from","querySelectorAll","checkbox","setAttribute","currentItem","code","currentIndex","nextIndex","EVENT_CODE","up","down","startIndex","dataset","focus","click","hasInput","enter","space","_a","checkedItem","useKeydown","isEmpty","every","currentNode2","getNodePath","path","reverse","getCurrentKey","setCurrentKey","handleNodeExpand","updateKeyChildren","Tree","m","$slots","install","app","component","_Tree","ElTree"],"sourceRoot":""}