# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarQube analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# (this feature is available starting from SonarQube 9.7, Developer Edition and above)

# 1. Make sure you add a valid GitHub configuration to your SonarQube (Administration > DevOps platforms > GitHub)

# 2. Import your project on SonarQube
#     * Add your repository as a new project by clicking "Create project" from your homepage.
#
# 3. Select GitHub Actions as your CI and follow the tutorial
#     * a. Generate a new token and add it to your GitHub repository's secrets using the name SONAR_TOKEN
#          (On SonarQube, click on your avatar on top-right > My account > Security or ask your administrator)
#
#     * b. Copy/paste your SonarQube host URL to your GitHub repository's secrets using the name SONAR_HOST_URL
#
#     * c. Copy/paste the project Key into the args parameter below
#          (You'll find this information in SonarQube by following the tutorial or by clicking on Project Information at the top-right of your project's homepage)

# Feel free to take a look at our documentation (https://docs.sonarqube.org/latest/analysis/github-integration/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/sq/10)

name: SonarQube analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Analyze with SonarQube

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarqube-scan-action@v1.1.0
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:
            # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
            # mandatory
            -Dsonar.projectKey=
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, a          

  - name: Setup Go environment
  uses: actions/setup-go@v5.5.0
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
    go-version: # optional
    # Path to the go.mod or go.work file.
    go-version-file: # optional
    # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Used to pull Go distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
    cache: # optional, default is true
    # Used to specify the path to a dependency file - go.sum
    cache-dependency-path: # optional
    # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
          ctivating DEBUG mode for the scanner, and adding client-side en
              vironment variables and system properties to the server-side log of analysis report processing.
              
          - name: DPy Action
  # You may pin to the exact commit or the version.
  # uses: DesigniteTools/DPyAction@bd057fd8668aa20541e302397df77d9c50cca2b4
  uses: DesigniteTools/DPyAction@v1.1.2
  with:
    # Personal access token
    PAT: # optional, default is No PAT provided
    # Designite license key - optional
    D_KEY: # optional, default is No key
    # Operating System of the runner to choose the appropriate DPy binary
    OS: # optional, default is linux
    # Branch to analyze - optional
    BRANCH: # optional, default is main
    # Output format - optional
    FORMAT: # optional, default is csv
          

            #-Dsonar.verbose= # optional, default is false            - name: Add comment to Asana Task
  # You may pin to the exact commit or the version.
  # uses: Asana/comment-on-task-github-action@c0947e8462e93e32f5baa70b1ac983905258b53a
  uses: Asana/comment-on-task-github-action@v1.2
  with:
    # The Asana secret for the action. Read more about how to generate this secret at https://github.com/Asana/create-app-attachment-github-action#step-2-set-up-a-repository-secret-for-the-secret-token
    asana-secret: # default is 
    # List of allowed projects. The action will only add comments to tasks in these projects. Only one of allowed-projects or blocked-projects can be specified.
    allowed-projects: # optional, default is 
    # List of allowed projects. The action will not add comments to tasks or subtasks of tasks in any of these projects. Only one of allowed-projects or blocked-projects can be specified.
    blocked-projects: # optional, default is 
    # What comment the action should use. Learn how to customize this message at https://github.com/Asana/create-app-attachment-github-action#step-2-set-up-a-repository-secret-for-the-secret-token
    comment-text: # default is             - name: Accessibility alt text bot
  uses: github/accessibility-alt-text-bot@v1.7.1
  with:
    # A custom linting configuration
    config: # optional
          
                      - name: RegEx Issue Labeler
  uses: github/issue-labeler@v3.4
  with:
    # The GITHUB_TOKEN secret
    repo-token: # optional, default is ${{ github.token }}
    # The path to the label configuration file. If the file doesn't exist at the specified path on the runner, action will read from the source repository via the Github API.
    configuration-path: 
    # Controls if versioned regex templates are being used
    enable-versioned-regex: 
    # The regex version number to use. Only required if using versioned regex files
    versioned-regex: # optional
    # Is optional and will result in any issues prior to this timestamp to be ignored
    not-before: # optional
    # The name of the label that should be added to an issue where the specified `version-regex` can not be found.
    body-missing-regex-label: # optional
    # Include the title in the regex target
    include-title: # optional, default is 0
    # Include the body in the regex target
    include-body: # optional, default is 1
    # Remove the label from the issue if the label regex does not match
    sync-labels: # optional, default is 0
    # The number of the issue/PR to label
    issue-number: # optional, default is ${{ github.event.issue.number || github.event.pull_request.number }}
                      - name: Add To GitHub projects
  uses: actions/add-to-project@v1.0.2
  with:
    # URL of the project to add issues to
    project-url: 
    # A GitHub personal access token with write access to the project
    github-token: 
    # A comma-separated list of labels to use as a filter for issue to be added
    labeled: # optional
    # The behavior of the labels filter, AND to match all labels, OR to match any label, NOT to exclude any listed label (default is OR)
    label-operator: # optional
                      - name: Load runner information
  # You may pin to the exact commit or the version.
  # uses: devops-actions/load-runner-info@7f8c07227aa6176e94e4eeb912016bb0a9d33796
  uses: devops-actions/load-runner-info@v1.0.10
  with:
    # Slug of the organization to analyze.
    organization: 
    # Slug of the repository to analyze.
    repo: # optional
    # Access token to use for analysis with either admin:org or repo owner if you run it against a repo
    accessToken: 
                      - name: Lightstep Pre-Deploy Check
  # You may pin to the exact commit or the version.
  # uses: lightstep/lightstep-action-predeploy@22bec553a6d0fb3de5026acb1159085601f76408
  uses: lightstep/lightstep-action-predeploy@v0.2.6
  with:
    # The organization associated with your Lightstep account (usually your company name)
    lightstep_organization: # optional
    # The Lightstep project associated with this repository
    lightstep_project: # optional
    # The key to access the Lightstep Public API
    lightstep_api_key: # optional
    # The token to access the Rollbar API
    rollbar_api_token: # optional
    # The token to access the PagerDuty API
    pagerduty_api_token: # optional
    # If set to true, collapse all conditions to a single table row
    rollup_conditions: # optional
    # If set to true, will not add a comment to pull-requests
    disable_comment: # optional
                      - name: Autometrics Report
  # You may pin to the exact commit or the version.
  # uses: autometrics-dev/diff-metrics@778b3281f8446790af0afd766d5bb236defb5dde
  uses: autometrics-dev/diff-metrics@v2.1.0
  with:
    # Github token to use
    gh-token: 
    # The list of rust project roots to check. One path per line
    rs-roots: # optional
    # The list of typescript project roots to check. One path per line
    ts-roots: # optional
    # The list of golang project roots to check. One path per line
    go-roots: # optional
    # The list of python project roots to check. One path per line
    py-roots: # optional
    # The number of days to keep the artifacts for. Defaults to 0 (inherits the policy from the repository)
    retention-days: # optional, default is 0
    # The version of am to download, skip patch or minor to act as a wildcard. "0.2" means ">=0.2.0 && <0.3.0", "1" means ">=1.0.0 && <2.0.0", etc.
    am-version: # optional
                      - name: Honeycomb Buildevents
  # You may pin to the exact commit or the version.
  # uses: honeycombio/gha-buildevents@e5d529f2a2a3eea1605786749c78cbb3122c46b5
  uses: honeycombio/gha-buildevents@v3.1.0
  with:
    # A Honeycomb API key - needed to send traces.
    apikey: 
    # Defaults to https://api.honeycomb.io
    apihost: # optional, default is https://api.honeycomb.io
    # The Honeycomb dataset to send traces to.
    dataset: 
    # Status of the job or worfklow. Setting this signals when to end the trace.
    status: # optional
    # Unix timestamp to represent when the trace started. Not necessary for single job workflows. Send in final use of the action for multi-job workflows.
    trace-start: # optional
    # Set this to a key unique for this matrix cell, only useful when using a build matrix.
    matrix-key: # optional
    # Deprecated value - please use status instead
    job-status: # optional
    # (true/false) Whether to send an event representing the setup of this action.
    send-init-event: # optional, default is true
    # If true, generate the trace ID as a 128-bit hex string compatible with OpenTelemetry by MD5 hashing the existing predictable trace ID.
    otel-traceid: # optional, default is false            - name: Sentry Release
  # You may pin to the exact commit or the version.
  # uses: getsentry/action-release@526942b68292201ac6bbb99b9a0747d4abee354c
  uses: getsentry/action-release@v3.2.0
  with:
    # Set the environment for this release. E.g. "production" or "staging".
Omit to skip adding deploy to release.
    environment: # optional
    # Space-separated list of paths to JavaScript source maps.
Omit to skip uploading sourcemaps.
    sourcemaps: # optional
    # Injects Debug IDs into source files and source maps to ensure proper
un-minifcation of your stacktraces.
Does nothing if "sourcemaps" was not set.
    inject: # optional, default is true
    # Unique identifier for the distribution, used to further segment your
release.
Usually your build number.
    dist: # optional
    # When false, omit marking the release as finalized and released.
    finalize: # optional, default is true
    # When the flag is set and the previous release commit was not found in
the repository, will create a release with the default commits count
instead of failing the command.
    ignore_missing: # optional
    # When the flag is set, command will not fail and just exit silently if no
new commits for a given release have been found.
    ignore_empty: # optional
    # Unix timestamp of the release start date. Omit for current time.
    started_at: # optional
    # Identifier that uniquely identifies the release.
Should match the "release" property in your Sentry SDK init call if one
was set.
Omit to auto-generate one.
    version: # optional
    # Identifier that uniquely identifies the release.
Should match the "release" property in your Sentry SDK init call if one
was set.
Omit to auto-generate one.
    release: # optional
    # Value prepended to auto-generated version.
    version_prefix: # optional
    # Value prepended to auto-generated release version.
    release_prefix: # optional
    # Specify whether to set commits for the release.
One of: "auto", "skip"
    set_commits: # optional
    # Space-separated list of projects.
Defaults to the env variable "SENTRY_PROJECT" if not provided.
    projects: # optional
    # Adds a prefix to source map urls after stripping them.
    url_prefix: # optional
    # Will remove a common prefix from uploaded filenames. Useful for removing
a path that is build-machine-specific.
Note: Will not remove common prefixes across two or more directories
provided to "sourcemap". E.g. Setting
"sourcemap": "./dist/js ./dist/asset/js" will strip "./dist" for the first
directory and "./dist/assets/js" for the
    strip_common_prefix: # optional
    # Directory to collect sentry release information from.
Useful when collecting information from a non-standard checkout directory.
    working_directory: # optional
    # The action sends telemetry data and crash reports to Sentry. This helps
us improve the action.
You can turn this off by setting this flag.
    disable_telemetry: # optional
    # The action needs access to the repo it runs in. For that we need to
configure git to mark the repo directory a safe directory.
You can turn this off by setting this flag.
    disable_safe_directory: # optional
                      - name: Harden-Runner
  # You may pin to the exact commit or the version.
  # uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
  uses: step-security/harden-runner@v2.13.0
  with:
    # Only these endpoints will be allowed if egress-policy is set to block
    allowed-endpoints: # optional, default is 
    # Policy for outbound traffic, can be either audit or block
    egress-policy: # optional, default is block
    # Used to avoid github rate limiting
    token: # optional, default is ${{ github.token }}
    # Disable sending telemetry to StepSecurity API, can be set to true or false. This can only be set to true when egress-policy is set to block
    disable-telemetry: # optional, default is false
    # Disable sudo access for the runner account. Note: This parameter will be deprecated in the future. Please use disable-sudo-and-containers instead.
    disable-sudo: # optional, default is false
    # Disable sudo and container access for the runner account
    disable-sudo-and-containers: # optional, default is false
    # Disable file monitoring
    disable-file-monitoring: # optional, default is false
    # Policy name to be used from the policy store
    policy: # optional, default is 
                      - name: Preview Environments
  # You may pin to the exact commit or the version.
  # uses: UffizziCloud/preview-action@6f946b7c6d38a24e28a134e6f833783dfaaaf782
  uses: UffizziCloud/preview-action@v2.6.1
  with:
    # An alternate compose file
    compose-file: # optional, default is docker-compose.yaml
    # URL to Uffizzi
    server: # default is https://app.uffizzi.com
    # Uffizzi username
    username: # optional
    # Uffizzi password
    password: # optional
    # Uffizzi project slug
    project: # optional
    # Username to authenticate to GHCR
    ghcr-username: # optional
    # Password to authenticate to GHCR
    ghcr-access-token: # optional
    # Value of `github.event.number` context
    github-event-number: # optional
    # Value of `github.ref` context
    github-ref: # optional
    # Value of `github.repository` context
    github-repository: # optional
    # 
    request-token: # optional
    # 
    request-token-url: # optional
    # 
    dockerhub-username: # optional
    # 
    dockerhub-password: # optional
    # Azure username
    acr-username: # optional
    # Azure password
    acr-password: # optional
    # Azure registry url
    acr-registry-url: # optional
    # Amazon Web Services access key id
    aws-access-key-id: # optional
    # Amazon Web Services secret access key
    aws-secret-access-key: # optional
    # Amazon Web Services registry url
    aws-registry-url: # optional
    # Google Cloud service key
    gcloud-service-key: # optional
    # Custom docker registry username
    docker-registry-username: # optional
    # Custom docker registry password
    docker-registry-password: # optional
    # Custom docker registry url
    docker-registry-url: # optional
          
                      - name: Checks App Compliance Scan
  # You may pin to the exact commit or the version.
  # uses: google-checks/checks-app-scan-github-action@84cba6b290ffc71b87f2d9976a35f30a3fa0c8d4
  uses: google-checks/checks-app-scan-github-action@v1.0.3
  with:
    # Checks account ID that you can find in the settings page
    account_id: 
    # Application ID
    app_id: 
    # Base64 encoded service account credentials
    service_account_base64: 
    # Path to your application binary (.apk, .abb or .ipa)
    binary_path: 
    # Checks CLI version to use
    version: # optional, default is latest
    # Boolean to generate Checks report
    generate_report: # optional, default is true
    # PRIORITY | POTENTIAL | OPPORTUNITY
    severity_threshold: # optional, default is PRIORITY
    # Fail build on issues detected when `all`
    fail_on: # optional, default is 
    # Wait for report after uploading binary
    wait_for_report: # optional, default is true
          

              vironment variables and system properties to the server-side log of analysis report processing.  
            
